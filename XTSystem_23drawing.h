namespace XTSystem
{
    typedef unsigned char Byte;
    namespace Drawing
    {

        class Color
        {
        private:
            typedef unsigned int ColorConst;
        public:
            Byte A;
            Byte R;
            Byte G;
            Byte B;

            Color() :A(), R(), G(), B() {}

            Color(const ColorConst& acolor) { fill(acolor); }
            Color& operator=(const ColorConst& acolor) { fill(acolor); return *this; }
            String ToString1() const { return String::Format(L"{0:02x}{1:02x}{2:02x}{3:02x}", (unsigned)A, (unsigned)R, (unsigned)G, (unsigned)B); }
            String ToString() const { return String::Format(L"A={0} R={1} G={2} B={3}", (unsigned)A, (unsigned)R, (unsigned)G, (unsigned)B); }
            String ToFile() const { return String::Format(L"{0:x}", (int)R); }

            static int clamp0_255(int x) { if (x < 0) x = 0; if (x>255) x = 255; return x; }
            static Color FromArgb(int red, int green, int blue)
            {
                return Color(255, (Byte)clamp0_255(red), (Byte)clamp0_255(green), (Byte)clamp0_255(blue));
            }
            static Color FromArgb(int alpha, int red, int green, int blue)
            {
                return Color((Byte)clamp0_255(alpha), (Byte)clamp0_255(red), (Byte)clamp0_255(green), (Byte)clamp0_255(blue));
            }

        private:
            Color(Byte _A, Byte _R, Byte _G, Byte _B) :A(_A), R(_R), G(_G), B(_B) {}
            void fill(const ColorConst& acolor)
            {
                A = (Byte)((acolor >> 24) & 0xFF);
                R = (Byte)((acolor >> 16) & 0xFF);
                G = (Byte)((acolor >> 8) & 0xFF);
                B = (Byte)(acolor & 0xFF);
            }
        public:
            static const ColorConst AliceBlue = 0xFFF0F8FF;
            static const ColorConst AntiqueWhite = 0xFFFAEBD7;
            static const ColorConst Aqua = 0xFF00FFFF;
            static const ColorConst Aquamarine = 0xFF7FFFD4;
            static const ColorConst Azure = 0xFFF0FFFF;
            static const ColorConst Beige = 0xFFF5F5DC;
            static const ColorConst Bisque = 0xFFFFE4C4;
            static const ColorConst Black = 0xFF000000;
            static const ColorConst BlanchedAlmond = 0xFFFFEBCD;
            static const ColorConst Blue = 0xFF0000FF;
            static const ColorConst BlueViolet = 0xFF8A2BE2;
            static const ColorConst Brown = 0xFFA52A2A;
            static const ColorConst BurlyWood = 0xFFDEB887;
            static const ColorConst CadetBlue = 0xFF5F9EA0;
            static const ColorConst Chartreuse = 0xFF7FFF00;
            static const ColorConst Chocolate = 0xFFD2691E;
            static const ColorConst Coral = 0xFFFF7F50;
            static const ColorConst CornflowerBlue = 0xFF6495ED;
            static const ColorConst Cornsilk = 0xFFFFF8DC;
            static const ColorConst Crimson = 0xFFDC143C;
            static const ColorConst Cyan = 0xFF00FFFF;
            static const ColorConst DarkBlue = 0xFF00008B;
            static const ColorConst DarkCyan = 0xFF008B8B;
            static const ColorConst DarkGoldenrod = 0xFFB8860B;
            static const ColorConst DarkGray = 0xFFA9A9A9;
            static const ColorConst DarkGreen = 0xFF006400;
            static const ColorConst DarkKhaki = 0xFFBDB76B;
            static const ColorConst DarkMagenta = 0xFF8B008B;
            static const ColorConst DarkOliveGreen = 0xFF556B2F;
            static const ColorConst DarkOrange = 0xFFFF8C00;
            static const ColorConst DarkOrchid = 0xFF9932CC;
            static const ColorConst DarkRed = 0xFF8B0000;
            static const ColorConst DarkSalmon = 0xFFE9967A;
            static const ColorConst DarkSeaGreen = 0xFF8FBC8F;
            static const ColorConst DarkSlateBlue = 0xFF483D8B;
            static const ColorConst DarkSlateGray = 0xFF2F4F4F;
            static const ColorConst DarkTurquoise = 0xFF00CED1;
            static const ColorConst DarkViolet = 0xFF9400D3;
            static const ColorConst DeepPink = 0xFFFF1493;
            static const ColorConst DeepSkyBlue = 0xFF00BFFF;
            static const ColorConst DimGray = 0xFF696969;
            static const ColorConst DodgerBlue = 0xFF1E90FF;
            static const ColorConst Firebrick = 0xFFB22222;
            static const ColorConst FloralWhite = 0xFFFFFAF0;
            static const ColorConst ForestGreen = 0xFF228B22;
            static const ColorConst Fuchsia = 0xFFFF00FF;
            static const ColorConst Gainsboro = 0xFFDCDCDC;
            static const ColorConst GhostWhite = 0xFFF8F8FF;
            static const ColorConst Gold = 0xFFFFD700;
            static const ColorConst Goldenrod = 0xFFDAA520;
            static const ColorConst Gray = 0xFF808080;
            static const ColorConst Green = 0xFF008000;
            static const ColorConst GreenYellow = 0xFFADFF2F;
            static const ColorConst Honeydew = 0xFFF0FFF0;
            static const ColorConst HotPink = 0xFFFF69B4;
            static const ColorConst IndianRed = 0xFFCD5C5C;
            static const ColorConst Indigo = 0xFF4B0082;
            static const ColorConst Ivory = 0xFFFFFFF0;
            static const ColorConst Khaki = 0xFFF0E68C;
            static const ColorConst Lavender = 0xFFE6E6FA;
            static const ColorConst LavenderBlush = 0xFFFFF0F5;
            static const ColorConst LawnGreen = 0xFF7CFC00;
            static const ColorConst LemonChiffon = 0xFFFFFACD;
            static const ColorConst LightBlue = 0xFFADD8E6;
            static const ColorConst LightCoral = 0xFFF08080;
            static const ColorConst LightCyan = 0xFFE0FFFF;
            static const ColorConst LightGoldenrodYellow = 0xFFFAFAD2;
            static const ColorConst LightGray = 0xFFD3D3D3;
            static const ColorConst LightGreen = 0xFF90EE90;
            static const ColorConst LightPink = 0xFFFFB6C1;
            static const ColorConst LightSalmon = 0xFFFFA07A;
            static const ColorConst LightSeaGreen = 0xFF20B2AA;
            static const ColorConst LightSkyBlue = 0xFF87CEFA;
            static const ColorConst LightSlateGray = 0xFF778899;
            static const ColorConst LightSteelBlue = 0xFFB0C4DE;
            static const ColorConst LightYellow = 0xFFFFFFE0;
            static const ColorConst Lime = 0xFF00FF00;
            static const ColorConst LimeGreen = 0xFF32CD32;
            static const ColorConst Linen = 0xFFFAF0E6;
            static const ColorConst Magenta = 0xFFFF00FF;
            static const ColorConst Maroon = 0xFF800000;
            static const ColorConst MediumAquamarine = 0xFF66CDAA;
            static const ColorConst MediumBlue = 0xFF0000CD;
            static const ColorConst MediumOrchid = 0xFFBA55D3;
            static const ColorConst MediumPurple = 0xFF9370DB;
            static const ColorConst MediumSeaGreen = 0xFF3CB371;
            static const ColorConst MediumSlateBlue = 0xFF7B68EE;
            static const ColorConst MediumSpringGreen = 0xFF00FA9A;
            static const ColorConst MediumTurquoise = 0xFF48D1CC;
            static const ColorConst MediumVioletRed = 0xFFC71585;
            static const ColorConst MidnightBlue = 0xFF191970;
            static const ColorConst MintCream = 0xFFF5FFFA;
            static const ColorConst MistyRose = 0xFFFFE4E1;
            static const ColorConst Moccasin = 0xFFFFE4B5;
            static const ColorConst NavajoWhite = 0xFFFFDEAD;
            static const ColorConst Navy = 0xFF000080;
            static const ColorConst OldLace = 0xFFFDF5E6;
            static const ColorConst Olive = 0xFF808000;
            static const ColorConst OliveDrab = 0xFF6B8E23;
            static const ColorConst Orange = 0xFFFFA500;
            static const ColorConst OrangeRed = 0xFFFF4500;
            static const ColorConst Orchid = 0xFFDA70D6;
            static const ColorConst PaleGoldenrod = 0xFFEEE8AA;
            static const ColorConst PaleGreen = 0xFF98FB98;
            static const ColorConst PaleTurquoise = 0xFFAFEEEE;
            static const ColorConst PaleVioletRed = 0xFFDB7093;
            static const ColorConst PapayaWhip = 0xFFFFEFD5;
            static const ColorConst PeachPuff = 0xFFFFDAB9;
            static const ColorConst Peru = 0xFFCD853F;
            static const ColorConst Pink = 0xFFFFC0CB;
            static const ColorConst Plum = 0xFFDDA0DD;
            static const ColorConst PowderBlue = 0xFFB0E0E6;
            static const ColorConst Purple = 0xFF800080;
            static const ColorConst Red = 0xFFFF0000;
            static const ColorConst RosyBrown = 0xFFBC8F8F;
            static const ColorConst RoyalBlue = 0xFF4169E1;
            static const ColorConst SaddleBrown = 0xFF8B4513;
            static const ColorConst Salmon = 0xFFFA8072;
            static const ColorConst SandyBrown = 0xFFF4A460;
            static const ColorConst SeaGreen = 0xFF2E8B57;
            static const ColorConst SeaShell = 0xFFFFF5EE;
            static const ColorConst Sienna = 0xFFA0522D;
            static const ColorConst Silver = 0xFFC0C0C0;
            static const ColorConst SkyBlue = 0xFF87CEEB;
            static const ColorConst SlateBlue = 0xFF6A5ACD;
            static const ColorConst SlateGray = 0xFF708090;
            static const ColorConst Snow = 0xFFFFFAFA;
            static const ColorConst SpringGreen = 0xFF00FF7F;
            static const ColorConst SteelBlue = 0xFF4682B4;
            static const ColorConst Tan = 0xFFD2B48C;
            static const ColorConst Teal = 0xFF008080;
            static const ColorConst Thistle = 0xFFD8BFD8;
            static const ColorConst Tomato = 0xFFFF6347;
            static const ColorConst Turquoise = 0xFF40E0D0;
            static const ColorConst Violet = 0xFFEE82EE;
            static const ColorConst Wheat = 0xFFF5DEB3;
            static const ColorConst White = 0xFFFFFFFF;
            static const ColorConst WhiteSmoke = 0xFFF5F5F5;
            static const ColorConst Yellow = 0xFFFFFF00;
            static const ColorConst YellowGreen = 0xFF9ACD32;

        };

        class Pen
        {
        private:
            Color _color;

        public: Pen(const Color &color)
        {
            _color = color;
        }

                const Color &getColor() const { return _color; }
                void setColor(const Color &color) { _color = color; }


        };

        class Image
        {
        public:
            virtual ~Image() {}

            virtual void Save(const String &filename) = 0;
        };

        class Bitmap :public Image
        {
        public: Bitmap(int width, int height)
        {
            Init(width, height);
            Clear(Color::Black);
        }
                virtual ~Bitmap()
                {
                    delete[]data;
                }

        public: Color GetPixel(int x, int y) { return data[Idx(x, y)]; }
        public: void SetPixel(int x, int y, Color color)
        {
            if (x<0 || y<0 || x>_width - 1 || y>_height - 1) return;
            data[Idx(x, y)] = color;
        }

        public: int Width()const { return _width; }
        public: int Height()const { return _height; }

        public: void Save(const String &Filename)
        {
            String filename_upper = Filename.ToUpper();
            if (filename_upper.EndsWith(L".PGM")) { ExportPGM(Filename); return; }
            if (filename_upper.EndsWith(L".PPM")) { ExportPPM(Filename); return; }
        }



        protected:
            int Idx(int x, int y) const { return x + y*_width; }

            void Clear(const Color &color)
            {
                for (int i = 0; i < _size; i++) data[i] = color;
            }

            void Init(int width, int height)
            {
                _width = width;
                _height = height;
                _size = _width*_height;
                _numcolor = 255;
                data = new Color[_size];
                Clear(Color::Black);
            }


            int _width;
            int _height;
            int _size;
            int _numcolor;
            Color *data;

            static Byte MakeGray(Color col)
            {
                double d = (0.2126 * col.R + 0.7152 * col.G + 0.0722 * col.B);
                if (d > 255) d = 255;
                if (d < 0) d = 0;
                return (Byte)(d + 0.5);
            }

            Color actual_drawing_color;
            void SetActualDrawingColor(const Color &color)
            {
                actual_drawing_color = color;
            }
            void DrawLine(const Pen& pen, int x1, int y1, int x2, int y2)
            {
                SetActualDrawingColor(pen.getColor());

                int w = x2 - x1;
                int h = y2 - y1;
                int dx1 = 0, dy1 = 0, dx2 = 0, dy2 = 0;
                if (w < 0) dx1 = -1; else if (w>0) dx1 = 1;
                if (h < 0) dy1 = -1; else if (h>0) dy1 = 1;
                if (w < 0) dx2 = -1; else if (w>0) dx2 = 1;
                int longest = Math::Abs(w);
                int shortest = Math::Abs(h);
                if (!(longest > shortest)) {
                    longest = Math::Abs(h);
                    shortest = Math::Abs(w);
                    if (h < 0) dy2 = -1; else if (h>0) dy2 = 1;
                    dx2 = 0;
                }
                int numerator = longest >> 1;
                for (int i = 0; i <= longest; i++) {

                    DrawPixel(x1, y1);

                    numerator += shortest;
                    if (!(numerator < longest)) {
                        numerator -= longest;
                        x1 += dx1;
                        y1 += dy1;
                    }
                    else {
                        x1 += dx2;
                        y1 += dy2;
                    }
                }
            }


            void DrawPixel(int x, int y)
            {
                SetPixel(x, y, actual_drawing_color);
            }

            void DrawEllipse(const Pen &pen, int x0, int y0, int width, int height)
            {
                SetActualDrawingColor(pen.getColor());
                int a2 = width * width;
                int b2 = height * height;
                int fa2 = 4 * a2, fb2 = 4 * b2;
                int x, y, sigma;

                /* first half */
                for (x = 0, y = height, sigma = 2 * b2 + a2*(1 - 2 * height); b2*x <= a2*y; x++)
                {

                    DrawPixel(x0 - x, y0 + y); DrawPixel(x0 + x, y0 + y);
                    DrawPixel(x0 - x, y0 - y); DrawPixel(x0 + x, y0 - y);

                    if (sigma >= 0)
                    {
                        sigma += fa2 * (1 - y);
                        y--;
                    }
                    sigma += b2 * ((4 * x) + 6);
                }

                /* second half */
                for (x = width, y = 0, sigma = 2 * a2 + b2*(1 - 2 * width); a2*y <= b2*x; y++)
                {

                    DrawPixel(x0 - x, y0 + y); DrawPixel(x0 + x, y0 + y);
                    DrawPixel(x0 + x, y0 - y); DrawPixel(x0 - x, y0 - y);

                    if (sigma >= 0)
                    {
                        sigma += fb2 * (1 - x);
                        x--;
                    }
                    sigma += a2 * ((4 * y) + 6);
                }
            }

            void DrawRectangle(const Pen &pen, int x, int y, int width, int height)
            {
                SetActualDrawingColor(pen.getColor());
                int x1 = Math::Max(0, x);
                int x2 = Math::Min(x + width, _width - 1);

                int y1 = Math::Max(0, y);
                int y2 = Math::Min(y + height, _height - 1);

                int _x, _y;
                _x = x; if (_x >= 0 && _x < _width) for (int iy = y1; iy <= y2; iy++) DrawPixel(_x, iy);
                _x = x + width; if (_x >= 0 && _x < _width) for (int iy = y1; iy <= y2; iy++) DrawPixel(_x, iy);
                _y = y; if (_y >= 0 && _y < _height) for (int ix = x1; ix <= x2; ix++) DrawPixel(ix, _y);
                _y = y + height; if (_y >= 0 && _y < _height) for (int ix = x1; ix <= x2; ix++) DrawPixel(ix, _y);
            }

            void ExportPGM(const String &Filename)
            {
                IO::BinaryWriter bw;

                bw.Open(Filename);
                char s[200];
                sprintf_s(s, "P5\n# xtsystem drawing\n%d %d\n%d\n", _width, _height, _numcolor);
                int len = (int)strnlen_s(s, 200);
                bw.Write(s, len);

                for (int y = 0; y < _height; y++)
                    for (int x = 0; x < _width; x++)
                    {
                    Byte gray = MakeGray(data[Idx(x, y)]);
                    bw.Write(gray);
                    }

                bw.Close();
            }

            void ExportPPM(const String &Filename)
            {
                IO::BinaryWriter bw;

                bw.Open(Filename);
                char s[200];
                sprintf_s(s, "P6\n# xtsystem drawing\n%d %d\n%d\n", _width, _height, _numcolor);
                int len = (int)strnlen_s(s, 200);
                bw.Write(s, len);

                for (int y = 0; y < _height; y++)
                    for (int x = 0; x < _width; x++)
                    {
                    Color c = data[Idx(x, y)];
                    bw.Write(c.R);
                    bw.Write(c.G);
                    bw.Write(c.B);
                    }

                bw.Close();
            }

            friend class Graphics;
        };



        class Graphics
        {
        public: Graphics() :im(NULL)
        {

        }
        public: static Graphics FromImage(Image&image)
        {
            Graphics g;
            g.im = &image;
            g.bmp = dynamic_cast<Bitmap*>(&image);

            return g;
        }

        public: void DrawLine(const Pen& pen, int x1, int y1, int x2, int y2)
        {
            if (bmp) bmp->DrawLine(pen, x1, y1, x2, y2);
        }
        public: void DrawRectangle(const Pen &pen, int x, int y, int width, int height)
        {
            if (bmp) bmp->DrawRectangle(pen, x, y, width, height);
        }
        public: void Clear(const Color &color)
        {
            if (bmp) bmp->Clear(color);
        }

        public:
            //void DrawEllipse(Pen pen, Rectangle rect);
            //void DrawEllipse(Pen pen, RectangleF rect);
            //void DrawEllipse(Pen pen, float x, float y, float width, float height);
            void DrawEllipse(Pen pen, int x, int y, int width, int height)
            {
                if (bmp) bmp->DrawEllipse(pen, x, y, width, height);
            }

            Image *im;
            Bitmap *bmp;
        };

        class ImgConverter
        {
        public: void CreateApplication(const String &filename)
        {
            IO::BinaryWriter bw;
            bw.Open(filename);

            int data_size = 0;
            const unsigned char* data = Data(&data_size);
            for (int i = 0; i < data_size; i++)
            {
                bw.Write(data[i]);
            }


            bw.Close();
        }
                static const unsigned char* Data(int *pLen)
                {
                    static unsigned const char data[] = {

                        0x4d, 0x5a, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0e, 0x1f, 0xba, 0x0e, 0x00, 0xb4, 0x09, 0xcd, 0x21, 0xb8, 0x01, 0x4c, 0xcd, 0x21, 0x54, 0x68,
                        0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x0d, 0x0d, 0x0a, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x45, 0x00, 0x00, 0x4c, 0x01, 0x03, 0x00, 0x33, 0x03, 0x71, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x02, 0x01, 0x0b, 0x01, 0x0b, 0x00, 0x00, 0x1a, 0x00, 0x00,
                        0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x39, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x40, 0x85, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x39, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xf4, 0x37, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00, 0x84, 0x19, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x2e, 0x72, 0x73, 0x72, 0x63, 0x00, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x63, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0xe4, 0x26, 0x00, 0x00, 0x10, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x30, 0x03, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x72, 0x01, 0x00, 0x00, 0x70, 0x0a, 0x72, 0x59, 0x00, 0x00, 0x70, 0x0b, 0x00, 0x06, 0x73, 0x08, 0x00, 0x00, 0x06, 0x0c, 0x07, 0x28, 0x03, 0x00, 0x00, 0x06, 0x0d, 0x09, 0x72, 0xb1, 0x00, 0x00, 0x70, 0x17, 0x28,
                        0x12, 0x00, 0x00, 0x0a, 0x16, 0xfe, 0x01, 0x16, 0xfe, 0x01, 0x13, 0x07, 0x11, 0x07, 0x2d, 0x0a, 0x08, 0x07, 0x28, 0x04, 0x00, 0x00, 0x06, 0x00, 0x2b, 0x43, 0x09, 0x72, 0xb9, 0x00, 0x00, 0x70, 0x17, 0x28, 0x12, 0x00, 0x00, 0x0a, 0x16, 0xfe, 0x01, 0x16, 0xfe, 0x01, 0x13, 0x07, 0x11, 0x07, 0x2d, 0x0a, 0x08, 0x07, 0x28, 0x06, 0x00, 0x00, 0x06, 0x00, 0x2b, 0x21, 0x00, 0x09, 0x28, 0x02, 0x00, 0x00, 0x06, 0x13, 0x04, 0x08, 0x6f, 0x0c, 0x00, 0x00, 0x06, 0x07, 0x11, 0x04, 0x6f, 0x13,
                        0x00, 0x00, 0x0a, 0x00, 0x12, 0x05, 0xfe, 0x15, 0x1c, 0x00, 0x00, 0x01, 0x00, 0x00, 0xde, 0x13, 0x13, 0x06, 0x00, 0x72, 0xc1, 0x00, 0x00, 0x70, 0x11, 0x06, 0x28, 0x14, 0x00, 0x00, 0x0a, 0x00, 0x00, 0xde, 0x00, 0x00, 0x28, 0x15, 0x00, 0x00, 0x0a, 0x26, 0x2a, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x77, 0x84, 0x00, 0x13, 0x1e, 0x00, 0x00, 0x01, 0x13, 0x30, 0x03, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x11, 0x00, 0x02, 0x72, 0xdf, 0x00, 0x00, 0x70, 0x17,
                        0x28, 0x12, 0x00, 0x00, 0x0a, 0x2c, 0x14, 0x02, 0x72, 0xe7, 0x00, 0x00, 0x70, 0x17, 0x28, 0x12, 0x00, 0x00, 0x0a, 0x16, 0xfe, 0x01, 0x16, 0xfe, 0x01, 0x2b, 0x01, 0x16, 0x00, 0x0b, 0x07, 0x2d, 0x0b, 0x28, 0x16, 0x00, 0x00, 0x0a, 0x0a, 0x38, 0x92, 0x00, 0x00, 0x00, 0x02, 0x72, 0xf1, 0x00, 0x00, 0x70, 0x17, 0x28, 0x12, 0x00, 0x00, 0x0a, 0x16, 0xfe, 0x01, 0x16, 0xfe, 0x01, 0x0b, 0x07, 0x2d, 0x08, 0x28, 0x17, 0x00, 0x00, 0x0a, 0x0a, 0x2b, 0x74, 0x02, 0x72, 0xf9, 0x00, 0x00, 0x70,
                        0x17, 0x28, 0x12, 0x00, 0x00, 0x0a, 0x16, 0xfe, 0x01, 0x16, 0xfe, 0x01, 0x0b, 0x07, 0x2d, 0x08, 0x28, 0x18, 0x00, 0x00, 0x0a, 0x0a, 0x2b, 0x56, 0x02, 0x72, 0x01, 0x01, 0x00, 0x70, 0x17, 0x28, 0x12, 0x00, 0x00, 0x0a, 0x16, 0xfe, 0x01, 0x16, 0xfe, 0x01, 0x0b, 0x07, 0x2d, 0x08, 0x28, 0x19, 0x00, 0x00, 0x0a, 0x0a, 0x2b, 0x38, 0x02, 0x72, 0x09, 0x01, 0x00, 0x70, 0x17, 0x28, 0x12, 0x00, 0x00, 0x0a, 0x2c, 0x14, 0x02, 0x72, 0x11, 0x01, 0x00, 0x70, 0x17, 0x28, 0x12, 0x00, 0x00, 0x0a,
                        0x16, 0xfe, 0x01, 0x16, 0xfe, 0x01, 0x2b, 0x01, 0x16, 0x00, 0x0b, 0x07, 0x2d, 0x08, 0x28, 0x1a, 0x00, 0x00, 0x0a, 0x0a, 0x2b, 0x08, 0x28, 0x17, 0x00, 0x00, 0x0a, 0x0a, 0x2b, 0x00, 0x06, 0x2a, 0x13, 0x30, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x11, 0x00, 0x02, 0x28, 0x1b, 0x00, 0x00, 0x0a, 0x17, 0x8d, 0x20, 0x00, 0x00, 0x01, 0x0c, 0x08, 0x16, 0x1f, 0x2e, 0x9d, 0x08, 0x6f, 0x1c, 0x00, 0x00, 0x0a, 0x0a, 0x06, 0x0b, 0x2b, 0x00, 0x07, 0x2a, 0x13, 0x30, 0x04, 0x00,
                        0xf7, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x11, 0x00, 0x03, 0x18, 0x28, 0x1d, 0x00, 0x00, 0x0a, 0x73, 0x1e, 0x00, 0x00, 0x0a, 0x0a, 0x72, 0x1b, 0x01, 0x00, 0x70, 0x02, 0x6f, 0x0c, 0x00, 0x00, 0x06, 0x6f, 0x1f, 0x00, 0x00, 0x0a, 0x8c, 0x26, 0x00, 0x00, 0x01, 0x02, 0x6f, 0x0c, 0x00, 0x00, 0x06, 0x6f, 0x20, 0x00, 0x00, 0x0a, 0x8c, 0x26, 0x00, 0x00, 0x01, 0x20, 0xff, 0x00, 0x00, 0x00, 0x8c, 0x26, 0x00, 0x00, 0x01, 0x28, 0x21, 0x00, 0x00, 0x0a, 0x0b, 0x00, 0x07, 0x13, 0x06, 0x16,
                        0x13, 0x07, 0x2b, 0x18, 0x11, 0x06, 0x11, 0x07, 0x6f, 0x22, 0x00, 0x00, 0x0a, 0x0c, 0x06, 0x08, 0x6f, 0x23, 0x00, 0x00, 0x0a, 0x00, 0x11, 0x07, 0x17, 0x58, 0x13, 0x07, 0x11, 0x07, 0x11, 0x06, 0x6f, 0x24, 0x00, 0x00, 0x0a, 0xfe, 0x04, 0x13, 0x08, 0x11, 0x08, 0x2d, 0xd7, 0x02, 0x6f, 0x0e, 0x00, 0x00, 0x06, 0x00, 0x16, 0x0d, 0x2b, 0x5b, 0x16, 0x13, 0x04, 0x2b, 0x3d, 0x00, 0x02, 0x11, 0x04, 0x09, 0x6f, 0x0f, 0x00, 0x00, 0x06, 0x13, 0x05, 0x06, 0x12, 0x05, 0x7b, 0x07, 0x00, 0x00,
                        0x04, 0x6f, 0x25, 0x00, 0x00, 0x0a, 0x00, 0x06, 0x12, 0x05, 0x7b, 0x06, 0x00, 0x00, 0x04, 0x6f, 0x25, 0x00, 0x00, 0x0a, 0x00, 0x06, 0x12, 0x05, 0x7b, 0x05, 0x00, 0x00, 0x04, 0x6f, 0x25, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x11, 0x04, 0x17, 0x58, 0x13, 0x04, 0x11, 0x04, 0x02, 0x6f, 0x0c, 0x00, 0x00, 0x06, 0x6f, 0x1f, 0x00, 0x00, 0x0a, 0xfe, 0x04, 0x13, 0x08, 0x11, 0x08, 0x2d, 0xae, 0x09, 0x17, 0x58, 0x0d, 0x09, 0x02, 0x6f, 0x0c, 0x00, 0x00, 0x06, 0x6f, 0x20, 0x00, 0x00, 0x0a, 0xfe,
                        0x04, 0x13, 0x08, 0x11, 0x08, 0x2d, 0x91, 0x02, 0x6f, 0x12, 0x00, 0x00, 0x06, 0x00, 0x2a, 0x00, 0x13, 0x30, 0x03, 0x00, 0x85, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x11, 0x00, 0x23, 0xbc, 0x96, 0x90, 0x0f, 0x7a, 0x36, 0xcb, 0x3f, 0x0f, 0x00, 0x7b, 0x07, 0x00, 0x00, 0x04, 0x6c, 0x5a, 0x23, 0xa5, 0x2c, 0x43, 0x1c, 0xeb, 0xe2, 0xe6, 0x3f, 0x0f, 0x00, 0x7b, 0x06, 0x00, 0x00, 0x04, 0x6c, 0x5a, 0x58, 0x23, 0x5d, 0x6d, 0xc5, 0xfe, 0xb2, 0x7b, 0xb2, 0x3f, 0x0f, 0x00, 0x7b, 0x05, 0x00,
                        0x00, 0x04, 0x6c, 0x5a, 0x58, 0x0a, 0x06, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x6f, 0x40, 0xfe, 0x02, 0x16, 0xfe, 0x01, 0x0c, 0x08, 0x2d, 0x0a, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x6f, 0x40, 0x0a, 0x06, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x04, 0x16, 0xfe, 0x01, 0x0c, 0x08, 0x2d, 0x0a, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x06, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x3f, 0x58, 0xd2, 0x0b, 0x2b, 0x00, 0x07,
                        0x2a, 0x00, 0x00, 0x00, 0x13, 0x30, 0x04, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x11, 0x00, 0x03, 0x18, 0x28, 0x1d, 0x00, 0x00, 0x0a, 0x73, 0x1e, 0x00, 0x00, 0x0a, 0x0a, 0x72, 0x6d, 0x01, 0x00, 0x70, 0x02, 0x6f, 0x0c, 0x00, 0x00, 0x06, 0x6f, 0x1f, 0x00, 0x00, 0x0a, 0x8c, 0x26, 0x00, 0x00, 0x01, 0x02, 0x6f, 0x0c, 0x00, 0x00, 0x06, 0x6f, 0x20, 0x00, 0x00, 0x0a, 0x8c, 0x26, 0x00, 0x00, 0x01, 0x20, 0xff, 0x00, 0x00, 0x00, 0x8c, 0x26, 0x00, 0x00, 0x01, 0x28, 0x21, 0x00,
                        0x00, 0x0a, 0x0b, 0x00, 0x07, 0x13, 0x07, 0x16, 0x13, 0x08, 0x2b, 0x18, 0x11, 0x07, 0x11, 0x08, 0x6f, 0x22, 0x00, 0x00, 0x0a, 0x0c, 0x06, 0x08, 0x6f, 0x23, 0x00, 0x00, 0x0a, 0x00, 0x11, 0x08, 0x17, 0x58, 0x13, 0x08, 0x11, 0x08, 0x11, 0x07, 0x6f, 0x24, 0x00, 0x00, 0x0a, 0xfe, 0x04, 0x13, 0x09, 0x11, 0x09, 0x2d, 0xd7, 0x02, 0x6f, 0x0e, 0x00, 0x00, 0x06, 0x00, 0x16, 0x0d, 0x2b, 0x43, 0x16, 0x13, 0x04, 0x2b, 0x25, 0x00, 0x02, 0x11, 0x04, 0x09, 0x6f, 0x0f, 0x00, 0x00, 0x06, 0x13,
                        0x05, 0x11, 0x05, 0x28, 0x05, 0x00, 0x00, 0x06, 0x13, 0x06, 0x06, 0x11, 0x06, 0x6f, 0x25, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x11, 0x04, 0x17, 0x58, 0x13, 0x04, 0x11, 0x04, 0x02, 0x6f, 0x0c, 0x00, 0x00, 0x06, 0x6f, 0x1f, 0x00, 0x00, 0x0a, 0xfe, 0x04, 0x13, 0x09, 0x11, 0x09, 0x2d, 0xc6, 0x09, 0x17, 0x58, 0x0d, 0x09, 0x02, 0x6f, 0x0c, 0x00, 0x00, 0x06, 0x6f, 0x20, 0x00, 0x00, 0x0a, 0xfe, 0x04, 0x13, 0x09, 0x11, 0x09, 0x2d, 0xa9, 0x02, 0x6f, 0x12, 0x00, 0x00, 0x06, 0x00, 0x2a, 0x1e,
                        0x02, 0x28, 0x26, 0x00, 0x00, 0x0a, 0x2a, 0x96, 0x02, 0x14, 0x7d, 0x03, 0x00, 0x00, 0x04, 0x02, 0x16, 0xe0, 0x7d, 0x04, 0x00, 0x00, 0x04, 0x02, 0x28, 0x26, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x02, 0x03, 0x73, 0x27, 0x00, 0x00, 0x0a, 0x7d, 0x01, 0x00, 0x00, 0x04, 0x00, 0x2a, 0x96, 0x02, 0x14, 0x7d, 0x03, 0x00, 0x00, 0x04, 0x02, 0x16, 0xe0, 0x7d, 0x04, 0x00, 0x00, 0x04, 0x02, 0x28, 0x26, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x02, 0x03, 0x73, 0x28, 0x00, 0x00, 0x0a, 0x7d, 0x01, 0x00, 0x00,
                        0x04, 0x00, 0x2a, 0xae, 0x02, 0x14, 0x7d, 0x03, 0x00, 0x00, 0x04, 0x02, 0x16, 0xe0, 0x7d, 0x04, 0x00, 0x00, 0x04, 0x02, 0x28, 0x26, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x02, 0x03, 0x04, 0x20, 0x08, 0x18, 0x02, 0x00, 0x73, 0x29, 0x00, 0x00, 0x0a, 0x7d, 0x01, 0x00, 0x00, 0x04, 0x00, 0x2a, 0x3a, 0x00, 0x02, 0x7b, 0x01, 0x00, 0x00, 0x04, 0x6f, 0x2a, 0x00, 0x00, 0x0a, 0x00, 0x2a, 0x00, 0x00, 0x13, 0x30, 0x01, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x11, 0x00, 0x02, 0x7b, 0x01,
                        0x00, 0x00, 0x04, 0x0a, 0x2b, 0x00, 0x06, 0x2a, 0x13, 0x30, 0x02, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x11, 0x00, 0x18, 0x0a, 0x02, 0x7b, 0x01, 0x00, 0x00, 0x04, 0x12, 0x00, 0x6f, 0x2b, 0x00, 0x00, 0x0a, 0x0b, 0x12, 0x01, 0x28, 0x2c, 0x00, 0x00, 0x0a, 0x69, 0x12, 0x01, 0x28, 0x2d, 0x00, 0x00, 0x0a, 0x69, 0x73, 0x2e, 0x00, 0x00, 0x0a, 0x0c, 0x2b, 0x00, 0x08, 0x2a, 0x00, 0x13, 0x30, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x11, 0x00, 0x18, 0x0a, 0x02,
                        0x7b, 0x01, 0x00, 0x00, 0x04, 0x12, 0x00, 0x6f, 0x2b, 0x00, 0x00, 0x0a, 0x0b, 0x12, 0x02, 0x12, 0x01, 0x28, 0x2f, 0x00, 0x00, 0x0a, 0x69, 0x12, 0x01, 0x28, 0x30, 0x00, 0x00, 0x0a, 0x69, 0x12, 0x01, 0x28, 0x2c, 0x00, 0x00, 0x0a, 0x69, 0x12, 0x01, 0x28, 0x2d, 0x00, 0x00, 0x0a, 0x69, 0x28, 0x31, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x12, 0x01, 0x28, 0x2c, 0x00, 0x00, 0x0a, 0x69, 0xfe, 0x1c, 0x04, 0x00, 0x00, 0x02, 0x5a, 0x7d, 0x02, 0x00, 0x00, 0x04, 0x02, 0x7b, 0x02, 0x00, 0x00, 0x04,
                        0x1a, 0x5d, 0x16, 0xfe, 0x01, 0x0d, 0x09, 0x2d, 0x14, 0x00, 0x02, 0x1a, 0x02, 0x7b, 0x02, 0x00, 0x00, 0x04, 0x1a, 0x5b, 0x17, 0x58, 0x5a, 0x7d, 0x02, 0x00, 0x00, 0x04, 0x00, 0x02, 0x02, 0x7b, 0x01, 0x00, 0x00, 0x04, 0x08, 0x19, 0x20, 0x08, 0x18, 0x02, 0x00, 0x6f, 0x32, 0x00, 0x00, 0x0a, 0x7d, 0x03, 0x00, 0x00, 0x04, 0x02, 0x02, 0x7b, 0x03, 0x00, 0x00, 0x04, 0x6f, 0x33, 0x00, 0x00, 0x0a, 0x13, 0x04, 0x12, 0x04, 0x28, 0x34, 0x00, 0x00, 0x0a, 0x7d, 0x04, 0x00, 0x00, 0x04, 0x2a,
                        0x13, 0x30, 0x03, 0x00, 0x15, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x11, 0x00, 0x02, 0x03, 0x04, 0x28, 0x13, 0x00, 0x00, 0x06, 0x71, 0x04, 0x00, 0x00, 0x02, 0x0a, 0x06, 0x0b, 0x2b, 0x00, 0x07, 0x2a, 0x00, 0x00, 0x00, 0x13, 0x30, 0x03, 0x00, 0x12, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x11, 0x00, 0x02, 0x03, 0x04, 0x28, 0x13, 0x00, 0x00, 0x06, 0x0a, 0x06, 0x05, 0x81, 0x04, 0x00, 0x00, 0x02, 0x2a, 0x00, 0x00, 0x13, 0x30, 0x03, 0x00, 0x22, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x11,
                        0x00, 0x02, 0x03, 0x04, 0x28, 0x13, 0x00, 0x00, 0x06, 0x0a, 0x06, 0x05, 0x7d, 0x07, 0x00, 0x00, 0x04, 0x06, 0x0e, 0x04, 0x7d, 0x06, 0x00, 0x00, 0x04, 0x06, 0x0e, 0x05, 0x7d, 0x05, 0x00, 0x00, 0x04, 0x2a, 0x8e, 0x00, 0x02, 0x7b, 0x01, 0x00, 0x00, 0x04, 0x02, 0x7b, 0x03, 0x00, 0x00, 0x04, 0x6f, 0x35, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x14, 0x7d, 0x03, 0x00, 0x00, 0x04, 0x02, 0x16, 0xe0, 0x7d, 0x04, 0x00, 0x00, 0x04, 0x2a, 0x00, 0x00, 0x13, 0x30, 0x03, 0x00, 0x20, 0x00, 0x00, 0x00,
                        0x0b, 0x00, 0x00, 0x11, 0x00, 0x02, 0x7b, 0x04, 0x00, 0x00, 0x04, 0x04, 0xd3, 0x02, 0x7b, 0x02, 0x00, 0x00, 0x04, 0x5a, 0x58, 0x03, 0xd3, 0xfe, 0x1c, 0x04, 0x00, 0x00, 0x02, 0x5a, 0x58, 0x0a, 0x2b, 0x00, 0x06, 0x2a, 0x42, 0x53, 0x4a, 0x42, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x76, 0x34, 0x2e, 0x30, 0x2e, 0x33, 0x30, 0x33, 0x31, 0x39, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x23, 0x7e, 0x00, 0x00,
                        0xfc, 0x05, 0x00, 0x00, 0xec, 0x05, 0x00, 0x00, 0x23, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x0b, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x23, 0x55, 0x53, 0x00, 0xa8, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x23, 0x47, 0x55, 0x49, 0x44, 0x00, 0x00, 0x00, 0xb8, 0x0d, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x23, 0x42, 0x6c, 0x6f, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x57, 0x55, 0xa2, 0x01, 0x09, 0x00, 0x00, 0x00,
                        0x00, 0xfa, 0x25, 0x33, 0x00, 0x16, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
                        0x53, 0x00, 0x4c, 0x00, 0x06, 0x00, 0x5a, 0x00, 0x4c, 0x00, 0x0a, 0x00, 0x8f, 0x00, 0x78, 0x00, 0x0a, 0x00, 0xe6, 0x00, 0x69, 0x00, 0x0a, 0x00, 0xfa, 0x00, 0x78, 0x00, 0x0a, 0x00, 0x29, 0x01, 0x69, 0x00, 0x06, 0x00, 0xd0, 0x01, 0xb6, 0x01, 0x06, 0x00, 0xfb, 0x01, 0xe9, 0x01, 0x06, 0x00, 0x12, 0x02, 0xe9, 0x01, 0x06, 0x00, 0x2f, 0x02, 0xe9, 0x01, 0x06, 0x00, 0x4e, 0x02, 0xe9, 0x01, 0x06, 0x00, 0x67, 0x02, 0xe9, 0x01, 0x06, 0x00, 0x80, 0x02, 0xe9, 0x01, 0x06, 0x00, 0x9b, 0x02,
                        0xe9, 0x01, 0x06, 0x00, 0xb6, 0x02, 0xe9, 0x01, 0x06, 0x00, 0xee, 0x02, 0xcf, 0x02, 0x06, 0x00, 0x02, 0x03, 0xcf, 0x02, 0x06, 0x00, 0x10, 0x03, 0xe9, 0x01, 0x06, 0x00, 0x29, 0x03, 0xe9, 0x01, 0x06, 0x00, 0x62, 0x03, 0x46, 0x03, 0x06, 0x00, 0x7e, 0x03, 0x46, 0x03, 0x06, 0x00, 0xa0, 0x03, 0x8d, 0x03, 0x5b, 0x00, 0xb4, 0x03, 0x00, 0x00, 0x06, 0x00, 0xe3, 0x03, 0xc3, 0x03, 0x06, 0x00, 0x03, 0x04, 0xc3, 0x03, 0x06, 0x00, 0x21, 0x04, 0x4c, 0x00, 0x0a, 0x00, 0x30, 0x04, 0x69, 0x00,
                        0x0a, 0x00, 0x3b, 0x04, 0x69, 0x00, 0x06, 0x00, 0x41, 0x04, 0x4c, 0x00, 0x06, 0x00, 0x5c, 0x04, 0x4c, 0x00, 0x06, 0x00, 0x9a, 0x04, 0x90, 0x04, 0x06, 0x00, 0x9f, 0x04, 0x4c, 0x00, 0x06, 0x00, 0xae, 0x04, 0x90, 0x04, 0x06, 0x00, 0xb3, 0x04, 0x90, 0x04, 0x06, 0x00, 0xbe, 0x04, 0x90, 0x04, 0x06, 0x00, 0xcc, 0x04, 0x90, 0x04, 0x06, 0x00, 0xd9, 0x04, 0x90, 0x04, 0x06, 0x00, 0xea, 0x04, 0x4c, 0x00, 0x0a, 0x00, 0x1d, 0x05, 0x78, 0x00, 0x0a, 0x00, 0x29, 0x05, 0x69, 0x00, 0x0a, 0x00,
                        0x34, 0x05, 0x69, 0x00, 0x0a, 0x00, 0x57, 0x05, 0x69, 0x00, 0x0a, 0x00, 0x61, 0x05, 0x78, 0x00, 0x06, 0x00, 0x82, 0x05, 0x4c, 0x00, 0x06, 0x00, 0x9e, 0x05, 0xcf, 0x02, 0x06, 0x00, 0xb4, 0x05, 0xcf, 0x02, 0x06, 0x00, 0xcf, 0x05, 0xbf, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x19, 0x00, 0x21, 0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x2c, 0x00, 0x21, 0x00, 0x05, 0x00, 0x01, 0x00,
                        0x08, 0x00, 0x09, 0x01, 0x10, 0x00, 0x39, 0x00, 0x21, 0x00, 0x09, 0x00, 0x05, 0x00, 0x14, 0x00, 0x01, 0x00, 0xed, 0x00, 0x35, 0x00, 0x01, 0x00, 0xf4, 0x00, 0x39, 0x00, 0x01, 0x00, 0x05, 0x01, 0x3c, 0x00, 0x01, 0x00, 0x10, 0x01, 0x40, 0x00, 0x06, 0x00, 0x79, 0x01, 0x89, 0x00, 0x06, 0x00, 0x7e, 0x01, 0x89, 0x00, 0x06, 0x00, 0x84, 0x01, 0x89, 0x00, 0x50, 0x20, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x64, 0x00, 0x0a, 0x00, 0x01, 0x00, 0x0c, 0x21, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00,
                        0x9b, 0x00, 0x19, 0x00, 0x02, 0x00, 0xe0, 0x21, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0xaa, 0x00, 0x1f, 0x00, 0x03, 0x00, 0x0c, 0x22, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0xb7, 0x00, 0x24, 0x00, 0x04, 0x00, 0x10, 0x23, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0xc7, 0x00, 0x2b, 0x00, 0x06, 0x00, 0xa4, 0x23, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0xd0, 0x00, 0x24, 0x00, 0x07, 0x00, 0x8f, 0x24, 0x00, 0x00, 0x00, 0x00, 0x86, 0x18, 0xe0, 0x00, 0x31, 0x00, 0x09, 0x00, 0x97, 0x24, 0x00, 0x00,
                        0x00, 0x00, 0x86, 0x18, 0xe0, 0x00, 0x44, 0x00, 0x09, 0x00, 0xbd, 0x24, 0x00, 0x00, 0x00, 0x00, 0x86, 0x18, 0xe0, 0x00, 0x49, 0x00, 0x0a, 0x00, 0xe3, 0x24, 0x00, 0x00, 0x00, 0x00, 0x86, 0x18, 0xe0, 0x00, 0x4f, 0x00, 0x0b, 0x00, 0x0f, 0x25, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x16, 0x01, 0x31, 0x00, 0x0d, 0x00, 0x20, 0x25, 0x00, 0x00, 0x00, 0x00, 0x86, 0x08, 0x1e, 0x01, 0x55, 0x00, 0x0d, 0x00, 0x38, 0x25, 0x00, 0x00, 0x00, 0x00, 0x81, 0x08, 0x2f, 0x01, 0x5a, 0x00, 0x0d, 0x00,
                        0x70, 0x25, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x3d, 0x01, 0x31, 0x00, 0x0d, 0x00, 0x20, 0x26, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x48, 0x01, 0x5f, 0x00, 0x0d, 0x00, 0x44, 0x26, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x51, 0x01, 0x66, 0x00, 0x0f, 0x00, 0x64, 0x26, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x51, 0x01, 0x6e, 0x00, 0x12, 0x00, 0x92, 0x26, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x5a, 0x01, 0x31, 0x00, 0x17, 0x00, 0xb8, 0x26, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x67, 0x01,
                        0x77, 0x00, 0x17, 0x00, 0x00, 0x00, 0x01, 0x00, 0x88, 0x01, 0x00, 0x00, 0x01, 0x00, 0x8d, 0x01, 0x00, 0x00, 0x01, 0x00, 0x91, 0x01, 0x00, 0x00, 0x01, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x91, 0x01, 0x00, 0x00, 0x01, 0x00, 0x9c, 0x01, 0x00, 0x00, 0x01, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x91, 0x01, 0x00, 0x00, 0x01, 0x00, 0x91, 0x01, 0x00, 0x00, 0x01, 0x00, 0xed, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x02, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x01, 0x00,
                        0xab, 0x01, 0x00, 0x00, 0x02, 0x00, 0xad, 0x01, 0x00, 0x00, 0x01, 0x00, 0xab, 0x01, 0x00, 0x00, 0x02, 0x00, 0xad, 0x01, 0x00, 0x00, 0x03, 0x00, 0xaf, 0x01, 0x00, 0x00, 0x01, 0x00, 0xab, 0x01, 0x00, 0x00, 0x02, 0x00, 0xad, 0x01, 0x00, 0x00, 0x03, 0x00, 0x84, 0x01, 0x00, 0x00, 0x04, 0x00, 0x7e, 0x01, 0x00, 0x00, 0x05, 0x00, 0x79, 0x01, 0x00, 0x00, 0x01, 0x00, 0xab, 0x01, 0x00, 0x00, 0x02, 0x00, 0xad, 0x01, 0x39, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x41, 0x00, 0xe0, 0x00, 0x44, 0x00,
                        0x49, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x51, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x59, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x61, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x69, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x71, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x79, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x81, 0x00, 0xe0, 0x00, 0x8c, 0x00, 0x89, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x91, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x99, 0x00, 0xe0, 0x00, 0x44, 0x00, 0xa1, 0x00, 0xe0, 0x00, 0x91, 0x00, 0xb1, 0x00, 0xe0, 0x00, 0x97, 0x00, 0xc1, 0x00,
                        0xe0, 0x00, 0x9d, 0x00, 0xc9, 0x00, 0xe0, 0x00, 0x31, 0x00, 0xd1, 0x00, 0x28, 0x04, 0xa2, 0x00, 0xd9, 0x00, 0x36, 0x04, 0xa9, 0x00, 0xe9, 0x00, 0x49, 0x04, 0xb0, 0x00, 0xe9, 0x00, 0x53, 0x04, 0xb6, 0x00, 0x19, 0x00, 0x66, 0x04, 0xc9, 0x00, 0x19, 0x00, 0x6f, 0x04, 0xc9, 0x00, 0x19, 0x00, 0x77, 0x04, 0xc9, 0x00, 0x19, 0x00, 0x7f, 0x04, 0xc9, 0x00, 0x19, 0x00, 0x87, 0x04, 0xc9, 0x00, 0xf9, 0x00, 0xaa, 0x00, 0x1f, 0x00, 0xd1, 0x00, 0xa4, 0x04, 0xd4, 0x00, 0x09, 0x01, 0xc7, 0x04,
                        0xe1, 0x00, 0x21, 0x01, 0xe0, 0x00, 0xeb, 0x00, 0xd9, 0x00, 0xe0, 0x04, 0xf2, 0x00, 0xd9, 0x00, 0xf0, 0x04, 0xf2, 0x00, 0xd1, 0x00, 0xfb, 0x04, 0xf6, 0x00, 0xd1, 0x00, 0x02, 0x05, 0xfe, 0x00, 0x21, 0x01, 0x0c, 0x05, 0x03, 0x01, 0xd1, 0x00, 0x12, 0x05, 0xf2, 0x00, 0x21, 0x01, 0x0c, 0x05, 0x08, 0x01, 0x09, 0x00, 0xe0, 0x00, 0x31, 0x00, 0x21, 0x00, 0xe0, 0x00, 0x44, 0x00, 0x21, 0x00, 0xe0, 0x00, 0x32, 0x01, 0x21, 0x00, 0xe0, 0x00, 0x38, 0x01, 0xd9, 0x00, 0x16, 0x01, 0x31, 0x00,
                        0xd9, 0x00, 0x41, 0x05, 0x46, 0x01, 0x41, 0x01, 0xe0, 0x04, 0x50, 0x01, 0x41, 0x01, 0xf0, 0x04, 0x50, 0x01, 0x31, 0x00, 0xe0, 0x00, 0x4f, 0x00, 0x41, 0x01, 0x4b, 0x05, 0x50, 0x01, 0x41, 0x01, 0x51, 0x05, 0x50, 0x01, 0x51, 0x01, 0xe0, 0x00, 0x5f, 0x01, 0x21, 0x00, 0x6f, 0x05, 0x67, 0x01, 0x29, 0x00, 0x78, 0x05, 0x75, 0x01, 0x61, 0x01, 0x89, 0x05, 0x79, 0x01, 0x21, 0x00, 0x93, 0x05, 0x99, 0x01, 0x69, 0x01, 0xe0, 0x00, 0x9f, 0x01, 0x79, 0x01, 0xe0, 0x00, 0x31, 0x00, 0x27, 0x00,
                        0xbb, 0x01, 0xa6, 0x01, 0x2e, 0x00, 0x3b, 0x00, 0x22, 0x02, 0x2e, 0x00, 0x13, 0x00, 0xf3, 0x01, 0x2e, 0x00, 0x1b, 0x00, 0x03, 0x02, 0x2e, 0x00, 0x23, 0x00, 0x03, 0x02, 0x2e, 0x00, 0x2b, 0x00, 0x09, 0x02, 0x2e, 0x00, 0x33, 0x00, 0xf3, 0x01, 0x2e, 0x00, 0x0b, 0x00, 0xab, 0x01, 0x2e, 0x00, 0x43, 0x00, 0x03, 0x02, 0x2e, 0x00, 0x53, 0x00, 0x03, 0x02, 0x2e, 0x00, 0x5b, 0x00, 0x4d, 0x02, 0x2e, 0x00, 0x6b, 0x00, 0x77, 0x02, 0x2e, 0x00, 0x7b, 0x00, 0x84, 0x02, 0x2e, 0x00, 0x83, 0x00,
                        0x8d, 0x02, 0x2e, 0x00, 0x8b, 0x00, 0x96, 0x02, 0x08, 0x00, 0x06, 0x00, 0xb5, 0x02, 0xba, 0x00, 0xce, 0x00, 0xda, 0x00, 0x0d, 0x01, 0x1c, 0x01, 0x22, 0x01, 0x41, 0x01, 0x54, 0x01, 0x7e, 0x01, 0x8c, 0x01, 0x93, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x6f, 0x01, 0x84, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x03, 0x00, 0x02, 0x00, 0x0d, 0x00, 0x05, 0x00, 0x04, 0x80, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x3e, 0x00, 0x69, 0x6d, 0x67, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x65, 0x00, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
                        0x00, 0x69, 0x6d, 0x67, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x00, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x00, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x00, 0x6d, 0x73, 0x63, 0x6f, 0x72, 0x6c, 0x69, 0x62, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x00, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x00, 0x4d, 0x61, 0x69, 0x6e, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
                        0x44, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x00, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x00, 0x53, 0x61, 0x76, 0x65, 0x42, 0x69, 0x74, 0x6d, 0x61,
                        0x70, 0x41, 0x73, 0x50, 0x50, 0x4d, 0x00, 0x4d, 0x61, 0x6b, 0x65, 0x47, 0x72, 0x61, 0x79, 0x00, 0x53, 0x61, 0x76, 0x65, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x41, 0x73, 0x50, 0x47, 0x4d, 0x00, 0x2e, 0x63, 0x74, 0x6f, 0x72, 0x00, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x00, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x00, 0x77, 0x69, 0x64, 0x74, 0x68, 0x00, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x00, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x00,
                        0x70, 0x42, 0x61, 0x73, 0x65, 0x00, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x00, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x00, 0x4c, 0x6f, 0x63, 0x6b, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x00, 0x47, 0x65, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x00, 0x53, 0x65, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x00, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
                        0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x00, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x41, 0x74, 0x00, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x00, 0x62, 0x6c, 0x75, 0x65, 0x00, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x00, 0x72, 0x65, 0x64, 0x00, 0x61, 0x72, 0x67, 0x73, 0x00, 0x65, 0x78, 0x74, 0x00, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x00, 0x62, 0x00, 0x70, 0x69, 0x78, 0x64, 0x61, 0x74, 0x61, 0x00, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x00, 0x78, 0x00, 0x79, 0x00, 0x63,
                        0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x00, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x41, 0x73, 0x73, 0x65, 0x6d,
                        0x62, 0x6c, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x41, 0x73,
                        0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x41, 0x73, 0x73, 0x65, 0x6d,
                        0x62, 0x6c, 0x79, 0x54, 0x72, 0x61, 0x64, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x00, 0x43, 0x6f,
                        0x6d, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x47, 0x75, 0x69, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72,
                        0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x00, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x53, 0x79, 0x73,
                        0x74, 0x65, 0x6d, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x00, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
                        0x65, 0x73, 0x00, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x78, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x00, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x00,
                        0x49, 0x6d, 0x61, 0x67, 0x65, 0x00, 0x53, 0x61, 0x76, 0x65, 0x00, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x00, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x00, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x00, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x4a, 0x70, 0x65, 0x67, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x50, 0x6e, 0x67, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x42, 0x6d, 0x70, 0x00, 0x67,
                        0x65, 0x74, 0x5f, 0x47, 0x69, 0x66, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x54, 0x69, 0x66, 0x66, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x4f, 0x00, 0x50, 0x61, 0x74, 0x68, 0x00, 0x43, 0x68, 0x61, 0x72, 0x00, 0x54, 0x72, 0x69, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x00, 0x46, 0x69, 0x6c, 0x65, 0x00, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x00, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x00, 0x4f, 0x70, 0x65, 0x6e, 0x00, 0x42, 0x69, 0x6e, 0x61,
                        0x72, 0x79, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x00, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x57, 0x69, 0x64, 0x74, 0x68, 0x00, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x00, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x43, 0x68, 0x61, 0x72, 0x73, 0x00, 0x57, 0x72, 0x69, 0x74, 0x65, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x00, 0x50, 0x69, 0x78,
                        0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x00, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x00, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x58, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x59, 0x00, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x00, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x00, 0x4c,
                        0x6f, 0x63, 0x6b, 0x42, 0x69, 0x74, 0x73, 0x00, 0x67, 0x65, 0x74, 0x5f, 0x53, 0x63, 0x61, 0x6e, 0x30, 0x00, 0x49, 0x6e, 0x74, 0x50, 0x74, 0x72, 0x00, 0x54, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x00, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x69, 0x74, 0x73, 0x00, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x00, 0x53,
                        0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x00, 0x55, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x63, 0x00, 0x3a, 0x00, 0x5c, 0x00, 0x77, 0x00, 0x6f, 0x00, 0x72, 0x00, 0x6b, 0x00, 0x5f, 0x00, 0x6e, 0x00, 0x65, 0x00, 0x77, 0x00, 0x5c, 0x00, 0x47, 0x00, 0x49, 0x00, 0x54, 0x00, 0x5c, 0x00, 0x74, 0x00,
                        0x65, 0x00, 0x73, 0x00, 0x74, 0x00, 0x70, 0x00, 0x6e, 0x00, 0x67, 0x00, 0x5c, 0x00, 0x63, 0x00, 0x79, 0x00, 0x6c, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x64, 0x00, 0x65, 0x00, 0x72, 0x00, 0x5f, 0x00, 0x73, 0x00, 0x68, 0x00, 0x61, 0x00, 0x64, 0x00, 0x65, 0x00, 0x64, 0x00, 0x2e, 0x00, 0x70, 0x00, 0x6e, 0x00, 0x67, 0x00, 0x00, 0x57, 0x63, 0x00, 0x3a, 0x00, 0x5c, 0x00, 0x77, 0x00, 0x6f, 0x00, 0x72, 0x00, 0x6b, 0x00, 0x5f, 0x00, 0x6e, 0x00, 0x65, 0x00, 0x77, 0x00, 0x5c, 0x00, 0x47, 0x00,
                        0x49, 0x00, 0x54, 0x00, 0x5c, 0x00, 0x74, 0x00, 0x65, 0x00, 0x73, 0x00, 0x74, 0x00, 0x70, 0x00, 0x6e, 0x00, 0x67, 0x00, 0x5c, 0x00, 0x63, 0x00, 0x79, 0x00, 0x6c, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x64, 0x00, 0x65, 0x00, 0x72, 0x00, 0x5f, 0x00, 0x73, 0x00, 0x68, 0x00, 0x61, 0x00, 0x64, 0x00, 0x65, 0x00, 0x64, 0x00, 0x2e, 0x00, 0x70, 0x00, 0x70, 0x00, 0x6d, 0x00, 0x00, 0x07, 0x70, 0x00, 0x70, 0x00, 0x6d, 0x00, 0x00, 0x07, 0x70, 0x00, 0x67, 0x00, 0x6d, 0x00, 0x00, 0x1d, 0x45, 0x00,
                        0x78, 0x00, 0x63, 0x00, 0x65, 0x00, 0x70, 0x00, 0x74, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x3a, 0x00, 0x20, 0x00, 0x7b, 0x00, 0x30, 0x00, 0x7d, 0x00, 0x00, 0x07, 0x6a, 0x00, 0x70, 0x00, 0x67, 0x00, 0x00, 0x09, 0x6a, 0x00, 0x70, 0x00, 0x65, 0x00, 0x67, 0x00, 0x00, 0x07, 0x70, 0x00, 0x6e, 0x00, 0x67, 0x00, 0x00, 0x07, 0x62, 0x00, 0x6d, 0x00, 0x70, 0x00, 0x00, 0x07, 0x67, 0x00, 0x69, 0x00, 0x66, 0x00, 0x00, 0x07, 0x74, 0x00, 0x69, 0x00, 0x66, 0x00, 0x00, 0x09, 0x74, 0x00,
                        0x69, 0x00, 0x66, 0x00, 0x66, 0x00, 0x00, 0x51, 0x50, 0x00, 0x36, 0x00, 0x0a, 0x00, 0x23, 0x00, 0x20, 0x00, 0x69, 0x00, 0x6d, 0x00, 0x67, 0x00, 0x63, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x76, 0x00, 0x65, 0x00, 0x72, 0x00, 0x74, 0x00, 0x20, 0x00, 0x56, 0x00, 0x65, 0x00, 0x72, 0x00, 0x73, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x20, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x31, 0x00, 0x0a, 0x00, 0x7b, 0x00, 0x30, 0x00, 0x7d, 0x00, 0x20, 0x00, 0x7b, 0x00, 0x31, 0x00, 0x7d, 0x00, 0x0a, 0x00,
                        0x7b, 0x00, 0x32, 0x00, 0x7d, 0x00, 0x0a, 0x00, 0x00, 0x51, 0x50, 0x00, 0x35, 0x00, 0x0a, 0x00, 0x23, 0x00, 0x20, 0x00, 0x69, 0x00, 0x6d, 0x00, 0x67, 0x00, 0x63, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x76, 0x00, 0x65, 0x00, 0x72, 0x00, 0x74, 0x00, 0x20, 0x00, 0x56, 0x00, 0x65, 0x00, 0x72, 0x00, 0x73, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x20, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x31, 0x00, 0x0a, 0x00, 0x7b, 0x00, 0x30, 0x00, 0x7d, 0x00, 0x20, 0x00, 0x7b, 0x00, 0x31, 0x00, 0x7d, 0x00,
                        0x0a, 0x00, 0x7b, 0x00, 0x32, 0x00, 0x7d, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xb6, 0xc3, 0xb4, 0x62, 0xe4, 0xf3, 0x28, 0x47, 0x84, 0xbe, 0x9b, 0x5e, 0x3e, 0x3a, 0x48, 0xbe, 0x00, 0x08, 0xb7, 0x7a, 0x5c, 0x56, 0x19, 0x34, 0xe0, 0x89, 0x05, 0x00, 0x01, 0x01, 0x1d, 0x0e, 0x08, 0xb0, 0x3f, 0x5f, 0x7f, 0x11, 0xd5, 0x0a, 0x3a, 0x05, 0x00, 0x01, 0x12, 0x0d, 0x0e, 0x04, 0x00, 0x01, 0x0e, 0x0e, 0x06, 0x00, 0x02, 0x01, 0x12, 0x0c, 0x0e, 0x05, 0x00, 0x01, 0x05, 0x11, 0x10, 0x03, 0x20, 0x00,
                        0x01, 0x03, 0x06, 0x12, 0x11, 0x02, 0x06, 0x08, 0x03, 0x06, 0x12, 0x15, 0x03, 0x06, 0x0f, 0x05, 0x04, 0x20, 0x01, 0x01, 0x0e, 0x05, 0x20, 0x01, 0x01, 0x12, 0x11, 0x05, 0x20, 0x02, 0x01, 0x08, 0x08, 0x04, 0x20, 0x00, 0x12, 0x11, 0x04, 0x20, 0x00, 0x11, 0x19, 0x06, 0x20, 0x02, 0x11, 0x10, 0x08, 0x08, 0x07, 0x20, 0x03, 0x01, 0x08, 0x08, 0x11, 0x10, 0x08, 0x20, 0x05, 0x01, 0x08, 0x08, 0x05, 0x05, 0x05, 0x07, 0x20, 0x02, 0x0f, 0x11, 0x10, 0x08, 0x08, 0x04, 0x28, 0x00, 0x12, 0x11,
                        0x04, 0x28, 0x00, 0x11, 0x19, 0x02, 0x06, 0x05, 0x04, 0x20, 0x01, 0x01, 0x02, 0x05, 0x20, 0x01, 0x01, 0x11, 0x55, 0x05, 0x20, 0x01, 0x01, 0x11, 0x5d, 0x04, 0x20, 0x01, 0x01, 0x08, 0x06, 0x00, 0x03, 0x08, 0x0e, 0x0e, 0x02, 0x06, 0x20, 0x02, 0x01, 0x0e, 0x12, 0x0d, 0x05, 0x00, 0x02, 0x01, 0x0e, 0x1c, 0x03, 0x00, 0x00, 0x0e, 0x0e, 0x07, 0x08, 0x0e, 0x0e, 0x12, 0x0c, 0x0e, 0x12, 0x0d, 0x11, 0x71, 0x12, 0x79, 0x02, 0x04, 0x00, 0x00, 0x12, 0x0d, 0x05, 0x07, 0x02, 0x12, 0x0d, 0x02,
                        0x05, 0x20, 0x01, 0x0e, 0x1d, 0x03, 0x06, 0x07, 0x03, 0x0e, 0x0e, 0x1d, 0x03, 0x09, 0x00, 0x02, 0x12, 0x80, 0x89, 0x0e, 0x11, 0x80, 0x8d, 0x06, 0x20, 0x01, 0x01, 0x12, 0x80, 0x95, 0x03, 0x20, 0x00, 0x08, 0x07, 0x00, 0x04, 0x0e, 0x0e, 0x1c, 0x1c, 0x1c, 0x04, 0x20, 0x01, 0x03, 0x08, 0x04, 0x20, 0x01, 0x01, 0x03, 0x04, 0x20, 0x01, 0x01, 0x05, 0x0e, 0x07, 0x09, 0x12, 0x80, 0x91, 0x0e, 0x03, 0x08, 0x08, 0x11, 0x10, 0x0e, 0x08, 0x02, 0x05, 0x07, 0x03, 0x0d, 0x05, 0x02, 0x0f, 0x07,
                        0x0a, 0x12, 0x80, 0x91, 0x0e, 0x03, 0x08, 0x08, 0x11, 0x10, 0x05, 0x0e, 0x08, 0x02, 0x05, 0x20, 0x01, 0x01, 0x12, 0x6d, 0x08, 0x20, 0x03, 0x01, 0x08, 0x08, 0x11, 0x80, 0x9d, 0x04, 0x07, 0x01, 0x12, 0x11, 0x09, 0x20, 0x01, 0x11, 0x80, 0xa1, 0x10, 0x11, 0x80, 0xa5, 0x03, 0x20, 0x00, 0x0c, 0x0a, 0x07, 0x03, 0x11, 0x80, 0xa5, 0x11, 0x80, 0xa1, 0x11, 0x19, 0x07, 0x20, 0x04, 0x01, 0x08, 0x08, 0x08, 0x08, 0x0d, 0x20, 0x03, 0x12, 0x15, 0x11, 0x80, 0xa9, 0x11, 0x80, 0xad, 0x11, 0x80,
                        0x9d, 0x03, 0x20, 0x00, 0x18, 0x04, 0x20, 0x00, 0x0f, 0x01, 0x0d, 0x07, 0x05, 0x11, 0x80, 0xa5, 0x11, 0x80, 0xa1, 0x11, 0x80, 0xa9, 0x02, 0x18, 0x06, 0x07, 0x02, 0x11, 0x10, 0x11, 0x10, 0x05, 0x07, 0x01, 0x0f, 0x11, 0x10, 0x05, 0x20, 0x01, 0x01, 0x12, 0x15, 0x06, 0x20, 0x01, 0x01, 0x11, 0x80, 0xb9, 0x04, 0x01, 0x00, 0x00, 0x00, 0x47, 0x01, 0x00, 0x1a, 0x2e, 0x4e, 0x45, 0x54, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
                        0x3d, 0x76, 0x34, 0x2e, 0x30, 0x01, 0x00, 0x54, 0x0e, 0x14, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x2e, 0x4e, 0x45, 0x54, 0x20, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x34, 0x0f, 0x01, 0x00, 0x0a, 0x69, 0x6d, 0x67, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x13, 0x46, 0x45, 0x49, 0x20, 0x45, 0x6c, 0x65,
                        0x63, 0x74, 0x72, 0x6f, 0x6e, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x73, 0x00, 0x00, 0x2a, 0x01, 0x00, 0x25, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0xc2, 0xa9, 0x20, 0x46, 0x45, 0x49, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x73, 0x20, 0x32, 0x30, 0x31, 0x34, 0x00, 0x00, 0x29, 0x01, 0x00, 0x24, 0x64, 0x65, 0x32, 0x36, 0x64, 0x64, 0x36, 0x36, 0x2d, 0x38, 0x38, 0x35, 0x31, 0x2d, 0x34, 0x32, 0x35, 0x39, 0x2d,
                        0x61, 0x33, 0x66, 0x38, 0x2d, 0x33, 0x33, 0x65, 0x64, 0x30, 0x30, 0x36, 0x66, 0x34, 0x63, 0x39, 0x35, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x07, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x00, 0x00, 0x08, 0x01, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x01, 0x00, 0x01, 0x00, 0x54, 0x02, 0x16, 0x57, 0x72, 0x61, 0x70, 0x4e, 0x6f, 0x6e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x6f, 0x77, 0x73,
                        0x01, 0x80, 0x9e, 0x2e, 0x01, 0x80, 0x84, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2c, 0x20, 0x6d, 0x73, 0x63, 0x6f, 0x72, 0x6c, 0x69, 0x62, 0x2c, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
                        0x6e, 0x3d, 0x34, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x3d, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x2c, 0x20, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x62, 0x37, 0x37, 0x61, 0x35, 0x63, 0x35, 0x36, 0x31, 0x39, 0x33, 0x34, 0x65, 0x30, 0x38, 0x39, 0x15, 0x01, 0x54, 0x02, 0x10, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
                        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x03, 0x71, 0x54, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x10, 0x38, 0x00, 0x00, 0x10, 0x1a, 0x00, 0x00, 0x52, 0x53, 0x44, 0x53, 0x4e, 0x3b, 0x28, 0x94, 0x5a, 0x6b, 0x61, 0x42, 0x83, 0x82, 0xe7, 0x39, 0x67, 0x66, 0x7c, 0x8f, 0x0e, 0x00, 0x00, 0x00, 0x63, 0x3a, 0x5c, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x65, 0x77, 0x5c, 0x69, 0x6d, 0x67, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5c, 0x69,
                        0x6d, 0x67, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5c, 0x6f, 0x62, 0x6a, 0x5c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x5c, 0x69, 0x6d, 0x67, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x39, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x39, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x43, 0x6f, 0x72, 0x45, 0x78, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x00, 0x6d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x65, 0x2e, 0x64, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x25,
                        0x00, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x80, 0x18, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x80,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0xa0, 0x40, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x43, 0x00, 0x00, 0xea, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x03, 0x34, 0x00, 0x00, 0x00, 0x56, 0x00, 0x53, 0x00, 0x5f, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4f, 0x00, 0x4e, 0x00, 0x5f, 0x00, 0x49, 0x00, 0x4e, 0x00,
                        0x46, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbd, 0x04, 0xef, 0xfe, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x01, 0x00, 0x56, 0x00, 0x61, 0x00, 0x72, 0x00, 0x46, 0x00, 0x69, 0x00, 0x6c, 0x00, 0x65, 0x00,
                        0x49, 0x00, 0x6e, 0x00, 0x66, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x04, 0x00, 0x00, 0x00, 0x54, 0x00, 0x72, 0x00, 0x61, 0x00, 0x6e, 0x00, 0x73, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x74, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x04, 0x90, 0x02, 0x00, 0x00, 0x01, 0x00, 0x53, 0x00, 0x74, 0x00, 0x72, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x67, 0x00, 0x46, 0x00, 0x69, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x49, 0x00, 0x6e, 0x00, 0x66, 0x00,
                        0x6f, 0x00, 0x00, 0x00, 0x6c, 0x02, 0x00, 0x00, 0x01, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x34, 0x00, 0x62, 0x00, 0x30, 0x00, 0x00, 0x00, 0x48, 0x00, 0x14, 0x00, 0x01, 0x00, 0x43, 0x00, 0x6f, 0x00, 0x6d, 0x00, 0x70, 0x00, 0x61, 0x00, 0x6e, 0x00, 0x79, 0x00, 0x4e, 0x00, 0x61, 0x00, 0x6d, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x45, 0x00, 0x49, 0x00, 0x20, 0x00, 0x45, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x63, 0x00, 0x74, 0x00, 0x72, 0x00,
                        0x6f, 0x00, 0x6e, 0x00, 0x20, 0x00, 0x4f, 0x00, 0x70, 0x00, 0x74, 0x00, 0x69, 0x00, 0x63, 0x00, 0x73, 0x00, 0x00, 0x00, 0x40, 0x00, 0x0b, 0x00, 0x01, 0x00, 0x46, 0x00, 0x69, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x44, 0x00, 0x65, 0x00, 0x73, 0x00, 0x63, 0x00, 0x72, 0x00, 0x69, 0x00, 0x70, 0x00, 0x74, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x00, 0x6d, 0x00, 0x67, 0x00, 0x63, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x76, 0x00, 0x65, 0x00, 0x72, 0x00, 0x74, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x08, 0x00, 0x01, 0x00, 0x46, 0x00, 0x69, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x56, 0x00, 0x65, 0x00, 0x72, 0x00, 0x73, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x0f, 0x00, 0x01, 0x00, 0x49, 0x00, 0x6e, 0x00, 0x74, 0x00, 0x65, 0x00, 0x72, 0x00, 0x6e, 0x00, 0x61, 0x00, 0x6c, 0x00, 0x4e, 0x00, 0x61, 0x00, 0x6d, 0x00,
                        0x65, 0x00, 0x00, 0x00, 0x69, 0x00, 0x6d, 0x00, 0x67, 0x00, 0x63, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x76, 0x00, 0x65, 0x00, 0x72, 0x00, 0x74, 0x00, 0x2e, 0x00, 0x65, 0x00, 0x78, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x25, 0x00, 0x01, 0x00, 0x4c, 0x00, 0x65, 0x00, 0x67, 0x00, 0x61, 0x00, 0x6c, 0x00, 0x43, 0x00, 0x6f, 0x00, 0x70, 0x00, 0x79, 0x00, 0x72, 0x00, 0x69, 0x00, 0x67, 0x00, 0x68, 0x00, 0x74, 0x00, 0x00, 0x00, 0x43, 0x00, 0x6f, 0x00, 0x70, 0x00, 0x79, 0x00,
                        0x72, 0x00, 0x69, 0x00, 0x67, 0x00, 0x68, 0x00, 0x74, 0x00, 0x20, 0x00, 0xa9, 0x00, 0x20, 0x00, 0x46, 0x00, 0x45, 0x00, 0x49, 0x00, 0x20, 0x00, 0x45, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x63, 0x00, 0x74, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x20, 0x00, 0x4f, 0x00, 0x70, 0x00, 0x74, 0x00, 0x69, 0x00, 0x63, 0x00, 0x73, 0x00, 0x20, 0x00, 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x0f, 0x00, 0x01, 0x00, 0x4f, 0x00, 0x72, 0x00, 0x69, 0x00,
                        0x67, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x61, 0x00, 0x6c, 0x00, 0x46, 0x00, 0x69, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x6e, 0x00, 0x61, 0x00, 0x6d, 0x00, 0x65, 0x00, 0x00, 0x00, 0x69, 0x00, 0x6d, 0x00, 0x67, 0x00, 0x63, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x76, 0x00, 0x65, 0x00, 0x72, 0x00, 0x74, 0x00, 0x2e, 0x00, 0x65, 0x00, 0x78, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x0b, 0x00, 0x01, 0x00, 0x50, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x64, 0x00, 0x75, 0x00, 0x63, 0x00, 0x74, 0x00,
                        0x4e, 0x00, 0x61, 0x00, 0x6d, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x00, 0x6d, 0x00, 0x67, 0x00, 0x63, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x76, 0x00, 0x65, 0x00, 0x72, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x08, 0x00, 0x01, 0x00, 0x50, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x64, 0x00, 0x75, 0x00, 0x63, 0x00, 0x74, 0x00, 0x56, 0x00, 0x65, 0x00, 0x72, 0x00, 0x73, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x2e, 0x00,
                        0x30, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x00, 0x00, 0x38, 0x00, 0x08, 0x00, 0x01, 0x00, 0x41, 0x00, 0x73, 0x00, 0x73, 0x00, 0x65, 0x00, 0x6d, 0x00, 0x62, 0x00, 0x6c, 0x00, 0x79, 0x00, 0x20, 0x00, 0x56, 0x00, 0x65, 0x00, 0x72, 0x00, 0x73, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x00, 0x00, 0xef, 0xbb, 0xbf, 0x3c, 0x3f, 0x78, 0x6d, 0x6c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
                        0x3d, 0x22, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x3d, 0x22, 0x55, 0x54, 0x46, 0x2d, 0x38, 0x22, 0x20, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x3d, 0x22, 0x79, 0x65, 0x73, 0x22, 0x3f, 0x3e, 0x0d, 0x0a, 0x3c, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x20, 0x78, 0x6d, 0x6c, 0x6e, 0x73, 0x3d, 0x22, 0x75, 0x72, 0x6e, 0x3a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f,
                        0x66, 0x74, 0x2d, 0x63, 0x6f, 0x6d, 0x3a, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x22, 0x20, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3d, 0x22, 0x31, 0x2e, 0x30, 0x22, 0x3e, 0x0d, 0x0a, 0x20, 0x20, 0x3c, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3d, 0x22, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x6e, 0x61, 0x6d,
                        0x65, 0x3d, 0x22, 0x4d, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x22, 0x2f, 0x3e, 0x0d, 0x0a, 0x20, 0x20, 0x3c, 0x74, 0x72, 0x75, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x20, 0x78, 0x6d, 0x6c, 0x6e, 0x73, 0x3d, 0x22, 0x75, 0x72, 0x6e, 0x3a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2d, 0x63, 0x6f, 0x6d, 0x3a, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x32, 0x22, 0x3e, 0x0d,
                        0x0a, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x3e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x20, 0x78, 0x6d, 0x6c, 0x6e, 0x73, 0x3d, 0x22, 0x75, 0x72, 0x6e, 0x3a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2d, 0x63, 0x6f, 0x6d, 0x3a, 0x61, 0x73, 0x6d,
                        0x2e, 0x76, 0x33, 0x22, 0x3e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x3d, 0x22, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x22, 0x20, 0x75, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x3d, 0x22, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x22, 0x2f, 0x3e, 0x0d, 0x0a, 0x20, 0x20,
                        0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x3e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x3e, 0x0d, 0x0a, 0x20, 0x20, 0x3c, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x3e, 0x0d, 0x0a, 0x3c, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x3e, 0x0d, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x80, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

                    *pLen = ARR_SIZE(data);
                    return data;
                }
        };
    }

}
